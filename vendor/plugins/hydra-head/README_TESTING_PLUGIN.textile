h1. Testing the hydra-head Plugin

h2. I. Install the Test Host 

In order to run the tests, you need to have a test rails app installed in the  hydra-plugin_test_host.  The plugin provides rake tasks for setting this up.  See "README_INSTALL_TEST_HOST":https://github.com/projecthydra/hydra-head/blob/master/README_INSTALL_TEST_HOST.textile for instructions on setting this up.

h2. II. Running the full Continuous Integration build

_Stop any copies of jetty that you have running before running this._

This will spin up jetty, import your fixtures into it run the tests, and stop jetty.

<pre>
  rake hyhead:ci RAILS_ENV=test 
</pre>

h2. III. Running the Tests Manually

h4. (1) Start Jetty, preloaded with Fedora and Solr applications

See below to reset jetty when re-running tests, or when running a simultaneous development instance.

Ensure nothing is running on port 8983.

You must do this at the root of the <b><i>hydra-head plugin</i> directory</b>, not within the hydra-plugin_test_host directory.

Note that java 1.6 must be invoked by the "java" command or Fedora won't work.

<pre>
  rake hydra:jetty:load RAILS_ENV=test
</pre>

This will start up jetty on port 8983.

h4. (2) Load test fixtures into Fedora/Solr.

You must do this at the root of the <b><i>hydra-head plugin</i> directory</b>, not within the hydra-plugin_test_host directory.

NOTE: to ensure that the tests do not rely on non-test data, do this first: 

<pre>
  rake hydra:default_fixtures:delete
</pre>

<pre>
  rake hydra:default_fixtures:refresh environment=test
</pre>

(TO DO: get rid of irrelevant fixtures; get rid of non-generic fixtures.)

h4. (3) Run specs.

<pre>
  rake hyhead:spec
</pre>

OR

<pre>
  rake hyhead:remove_from_host_plugins_dir
  rake hyhead:copy_to_host_plugins_dir
  rake hyhead:rspec
</pre>


h2. If you need to Re-run the tests:

h4. Clean out and reload the databases:

<pre>
  cd hydra-plugin_test_host
  rake db:drop RAILS_ENV=test
    or
  rake db:drop:all   (to ensure that the tests do not rely on non-test data)
  rake db:migrate:all RAILS_ENV=test  
  cd ..
</pre>


h2. Don't forget to stop Jetty!

It's easy to forget a running jetty, start another jetty process, 
and then get confusing behavior because you have two jetty instances on the
same port.

To stop jetty:
From the rails application directory  (my-hydra-head-test-app)

<pre>
  rake hydra:jetty:stop
</pre>

Use ps to ensure the java process has stopped.  If not, kill it manually.

h4. Clean out and reload the fixtures:

1. Stop jetty

<pre>
  rake hydra:jetty:stop
</pre>

Use ps to ensure the java process has stopped.  If not, kill it manually.

2. Clean out Solr and Fedora on Jetty

(Note:  this will also wipe out the development data until we use the single solr instance of hydra-jetty)

TODO: can this be a single rake task?

<pre>
  cd jetty
  git clean -df
  git checkout .
  git status     should show nothing to commit
  cd ..   (back to root of the _plugin_)
</pre>

3. Re-initialize and start Jetty:

<pre>
  rake hydra:jetty:load RAILS_ENV=test
</pre>

4. Reload the pristine fixtures.
NOTE: to ensure that the tests do not rely on non-test data, do this first:

<pre>
  rake hydra:default_fixtures:delete
</pre>

<pre>
  rake hydra:default_fixtures:refresh environment=test
</pre>
